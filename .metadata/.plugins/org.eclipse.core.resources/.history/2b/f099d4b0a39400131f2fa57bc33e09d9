package com.example.bookstore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.apache.http.NameValuePair;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.ListActivity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;

public class AllProductsActivity extends ListActivity {
	//progress dialog
	private ProgressDialog pDialog;
	
	//creating a JSON parser object
	JSONParser jParser = new JSONParser();
	
	ArrayList<HashMap<String, String>> productList;
	//url to get all products lists
	private static String url_all ="http://10.0.2.2:8080";
	
	//JSON node names
	private static final String TAG_SUCCESS = "success";
	private static final String TAG_PRODUCTS = "products";
	private static final String TAG_TITLE = "title";
	private static final String TAG_PID = "pid";
	
	//products JSON array
	JSONArray products = null;
	
	@Override
	public void onCreate(Bundle savedInstanceState){
		super.onCreate(savedInstanceState);
		setContentView(R.layout.all_products);
		
		//HashMap for listview
		productList = new ArrayList<HashMap<String, String>>();
		
		//loading products in background thread
		new LoadAllProducts().execute();
		
		//get listview
		ListView listview = getListView();
		
		//on selecting single product
		//launch edit product screen
		listview.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> parent,
					View view, int position, long id) {
				//getting values fron the selected ListItem
				String pid = ((TextView) view.findViewById(R.id.pid)).getText().toString();
				//starting new intent
				Intent in = new Intent(getApplicationContext(),EditProductActivity.class);
				//sending pid to next activity
				in.putExtra(TAG_PID, pid);
				
				//starting new activity and expecting some response back
				startActivityForResult(in, 100);
			}
		});
	}
	//response from Edit Product Activity
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data){
		super.onActivityResult(requestCode, resultCode, data);
		//if result code is 100
		if(resultCode == 100){
			//if result code 100 is received it means the user deleted/
			//edited product. reload this screen again
			Intent intent = getIntent();
			finish();
			startActivity(intent);
			
		}
	}
	//Background async task to load all product by making http request
	class LoadAllProducts extends AsyncTask<String, String, String>{
		//Before starting background thread Show Progress Dialog
		@Override
		protected void onPreExecute(){
			super.onPreExecute();
			pDialog = new ProgressDialog(AllProductsActivity.this);
			pDialog.setMessage("Loading products. Please wait...");
			pDialog.setIndeterminate(false);
			pDialog.setCancelable(false);
			pDialog.show();
		}
		//Getting all products from url
		protected String doInBackground(String... args){
			//building parameters
			List<NameValuePair> params = new ArrayList<NameValuePair>();
			//getting JSON string from url
			JSONObject json = jParser.makeHttpRequest(url_all,"GET", params);
			//check log cat for JSON response
			Log.d("All_Products",json.toString());
			try{
				//checking for success tag
				int success = json.getInt(TAG_SUCCESS);
				if(success == 1){
					products = json.getJSONArray(TAG_PRODUCTS);
					//looping through all products
					for(int i = 0; i < products.length(); i++){
						JSONObject c = products.getJSONObject(i);
						//storing each json item in a variable
						String id = c.getString(TAG_PID);
						String name = c.getString(TAG_TITLE);
						//creating a new hashmap
						HashMap<String, String> map = new HashMap<String, String>();
						map.put(TAG_PID, id);
						map.put(TAG_TITLE, name);
						//adding Hashlist to Arraylist
						productList.add(map);
					}
				}else{
					//no product found
					// launch addnewproduct activity
					Intent i = new Intent(getApplicationContext(), NewProductActivity.class);
					//closing all previous activities
					i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
					startActivity(i);
				}
			}catch(JSONException e){
				e.printStackTrace();
			}
			return null;
		}
		//after completing background task Dismiss the progress dialog
		protected void onPostExecute(String file_url){
			//dissmiss the dialog after getting all products
			pDialog.dismiss();
			//updating UI from background thread
			runOnUiThread(new Runnable(){
				public void run(){
					//updating parsed JSON data into ListView
					ListAdapter adapter = new SimpleAdapter(
							AllProductsActivity.this, productList,
							R.layout.list_item, new String[] {TAG_PID,
									TAG_TITLE},
									new int[] {R.id.pid, R.id.title});
					//updating listview
					setListAdapter(adapter);
				}
				
			});
		}
	}

}
