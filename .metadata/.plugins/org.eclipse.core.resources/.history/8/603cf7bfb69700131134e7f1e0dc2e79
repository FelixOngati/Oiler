//EditProductActivity.java
package com.example.bookstore;

import java.util.ArrayList;
import java.util.List;

import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.Button;

public class EditProductActivity extends Activity {
	EditText txtTitle;
	EditText txtPrice;
	EditText txtDesc;
	EditText txtCreatedAt;
	Button btnSave;
	Button btnDelete;
	
	String pid;
	//progress dialog
	private ProgressDialog pDialog;
	
	//JSONParser class
	JSONParserr jsonParser = new JSONParserr();
	//single product url
	private static final String url_product_details = "http://10.0.2.2:8080/android_connect/product_details.php";
	//update product url
	private static final String url_update_product = "http://10.0.2.2:8080/android_connect/update_product.php";
	//delete product url
	private static final String url_delete_product = "http://10.0.2.2:8080/android_connect/delete_product.php";
	
	//JSON node names
	private static final String TAG_SUCCESS = "success";
	private static final String TAG_PRODUCT = "product";
	private static final String TAG_PID = "pid";
	private static final String TAG_TITLE = "title";
	private static final String TAG_PRICE = "price";
	private static final String TAG_DESC = "description";
	
	@Override
	public void onCreate(Bundle savedInstanceState){
		super.onCreate(savedInstanceState);
		setContentView(R.layout.edit_product);
		
		//buttons
		btnSave = (Button) findViewById(R.id.btnSave);
		btnDelete = (Button) findViewById(R.id.btnDelete);
		
		//getting product details from intent
		Intent i = getIntent();
		
		//getting product id (pid) from intent
		pid = i.getStringExtra(TAG_PID);
		
		//getting complete product details in background thread
		new GetProductDetails().execute();
		
		//save button click event
		btnSave.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View arg0) {
				//deleting product in background thread
				new DeleteProduct().execute();
				
			}
		});
	}
	
	//Background Async Task to get complete product details
	class GetProductDetails extends AsyncTask<String, String, String>{
		//Before starting background thread show Progress Dialog
		@Override
		protected void onPreExecute(){
			super.onPreExecute();
			pDialog = new ProgressDialog(EditProductActivity.this);
			pDialog.setMessage("Loading product details. Please wait...");
			pDialog.setIndeterminate(false);
			pDialog.show();
		}
		//Getting product details in background thread
		protected String doInBackground(String... params){
			//updating UI from background thread
			runOnUiThread(new Runnable(){
				public void run(){
					//check for success tag
					int success;
					try{
						//Building parameters
						List<NameValuePair> params = new ArrayList<NameValuePair>();
						params.add(new BasicNameValuePair("pid", pid));
						
						//getting product details by making HTTP request
						//product details url will use get request
						JSONObject json = jsonParser.makeHttpRequest(
								url_product_details, "GET", params);
						
						//check your log for json response
						Log.d("Single product details",json.toString());
						
						//json success tag
						success = json.getInt(TAG_SUCCESS);
						if(success == 1){
							//successfully received product details
							JSONArray productObj = json.getJSONArray(TAG_PRODUCT);
							//get first product object from json array
							JSONObject product = productObj.getJSONObject(0);
							
							//product with this pid found
							//Edit text
							txtTitle = (EditText) findViewById(R.id.inputTitle);
							txtPrice = (EditText) findViewById(R.id.inputPrice);
							txtDesc = (EditText) findViewById(R.id.inputDesc);
							
							//display product data in Edit Text
							txtTitle.setText(product.getString(TAG_TITLE));
							txtDesc.setText(product.getString(TAG_DESC));
							txtPrice.setText(product.getString(TAG_PRICE));
						}else{
							//product with pid not found
						}
					}catch(JSONException e){
						e.printStackTrace();
					}
				}
			});
			return null;
		}
		//dismiss progress dialog after completing background task
		protected void onPostExecute(String file_url){
			pDialog.dismiss();
		}
	}
	
	//Background Async Task to save product details
	class SaveProductDetails extends AsyncTask<String, String, String>{
		//show progress dialog
		@Override
		protected void onPreExecute(){
			super.onPreExecute();
			pDialog = new ProgressDialog(EditProductActivity.this);
			pDialog.setMessage("Saving Product...");
			pDialog.setIndeterminate(false);
			pDialog.setCancelable(true);
			pDialog.show();
		}
		//saving product
		protected String doInBackground(String... args){
			// getting updated data from EditTexts
            String title = txtTitle.getText().toString();
            String price = txtPrice.getText().toString();
            String description = txtDesc.getText().toString();
 
            // Building Parameters
            List<NameValuePair> params = new ArrayList<NameValuePair>();
            params.add(new BasicNameValuePair(TAG_PID, pid));
            params.add(new BasicNameValuePair(TAG_TITLE, title));
            params.add(new BasicNameValuePair(TAG_PRICE, price));
            params.add(new BasicNameValuePair(TAG_DESC, description));
 
            // sending modified data through http request
            // Notice that update product url accepts POST method
            JSONObject json = jsonParser.makeHttpRequest(url_update_product,
                    "POST", params);
         // check json success tag
            try {
                int success = json.getInt(TAG_SUCCESS);
 
                if (success == 1) {
                    // successfully updated
                    Intent i = getIntent();
                    // send result code 100 to notify about product update
                    setResult(100, i);
                    finish();
                } else {
                    // failed to update product
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
 
            return null;
        }
		/**
         * After completing background task Dismiss the progress dialog
         * **/
        protected void onPostExecute(String file_url) {
            // dismiss the dialog once product updated
            pDialog.dismiss();
        }
	
	}
	class DeleteProduct extends AsyncTask<String, String, String> {
		 
        /**
         * Before starting background thread Show Progress Dialog
         * */
        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            pDialog = new ProgressDialog(EditProductActivity.this);
            pDialog.setMessage("Deleting Product...");
            pDialog.setIndeterminate(false);
            pDialog.setCancelable(true);
            pDialog.show();
        }
 
        /**
         * Deleting product
         * */
        protected String doInBackground(String... args) {
 
            // Check for success tag
            int success;
            try {
                // Building Parameters
                List<NameValuePair> params = new ArrayList<NameValuePair>();
                params.add(new BasicNameValuePair("pid", pid));
 
                // getting product details by making HTTP request
                JSONObject json = jsonParser.makeHttpRequest(
                        url_delete_product, "POST", params);
             // check your log for json response
                Log.d("Delete Product", json.toString());
 
                // json success tag
                success = json.getInt(TAG_SUCCESS);
                if (success == 1) {
                    // product successfully deleted
                    // notify previous activity by sending code 100
                    Intent i = getIntent();
                    // send result code 100 to notify about product deletion
                    setResult(100, i);
                    finish();
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
 
            return null;
        }
        /**
         * After completing background task Dismiss the progress dialog
         * **/
        protected void onPostExecute(String file_url) {
            // dismiss the dialog once product deleted
            pDialog.dismiss();
 
        }
     }
}